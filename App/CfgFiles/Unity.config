<configuration>
  <configSections>
    <!--<section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>-->
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Unity.Configuration"/>
  </configSections>

  <unity xmlns="http://schemas.microsoft.com/practces/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Unity.Interception.Configuration"/>
    
    <containers>
      
      <!--MyContainer为自定义名称 只需要和调用时名称保持一致即可-->
      <container name="MyContainer">
        <extension type="Interception"/>
        <!--type为对象的名称,mapTo为注入对象的名称 写法为用逗号隔开两部分，一是类的全部，包括命名空间，二是程序集名称-->
        <!--<register type="AH.Interface.ICellPhone,AH.Interface" mapTo="AH.Impl.ApplePhone,AH.Impl">
          -->
        <!--<lifetime type="singleton" />-->
        <!--
        </register>-->  
        <!--<register type="AH.IService.IBaseService,AH.IService" mapTo="AH.SqlService.BaseService,AH.SqlService">
          <interceptor type="InterfaceInterceptor"/>
          <interceptionBehavior type="AH.Core.Behaviors.CachingBehavior, AH.Core"/>
          <interceptionBehavior type="AH.Core.Behaviors.ErrorExceptionBehavior, AH.Core"/>
        </register>-->
        <!--<register type="AH.IBLL.IBaseBLL,AH.IBLL" mapTo="AH.BLL.BaseBLL,AH.BLL"/>
        <register type="AH.IBLL.IBLL`1,AH.IBLL" mapTo="AH.BLL.BLL`1,AH.BLL"/>-->
        <register type="AH.Framework.IRepository.IDBSession,AH.Framework.IRepository" mapTo="AH.Framework.Repository.DBSession,AH.Framework.Repository"/>
        <register type="AH.Framework.IRepository.IDBSessionFactory,AH.Framework.IRepository" mapTo="AH.Framework.Repository.DBSessionFactory,AH.Framework.Repository"/>
        <register type="AH.Framework.IService.IBaseService`1,AH.Framework.IService" mapTo="AH.Framework.Service.BaseService`1,AH.Framework.Service"/>
        <register type="AH.Framework.IService.IBaseService,AH.Framework.IService" mapTo="AH.Framework.Service.BaseService,AH.Framework.Service"/>
        <!--<register type="AH.Framework.IService.ISalesOrderService,AH.Framework.IService" mapTo="AH.Framework.Service.SalesOrderService,AH.Framework.Service"/>-->
        <register type="AH.Framework.IRepository.IBaseRepository,AH.Framework.IRepository" mapTo="AH.Framework.Repository.BaseRepository,AH.Framework.Repository"/>
        <register type="AH.Framework.IRepository.IRepositoryService`1,AH.Framework.IRepository" mapTo="AH.Framework.Repository.Chloe.RepositoryService`1,AH.Framework.Repository.Chloe"/>
        <register type="AH.Framework.IService.IAppService,AH.Framework.IService" mapTo="AH.Framework.Service.AppService,AH.Framework.Service"/>
        <register type="AH.Framework.IService.IAppService`1,AH.Framework.IService" mapTo="AH.Framework.Service.AppService`1,AH.Framework.Service"/>
        <register type="AH.Framework.IRepository.IBaseRepository`1,AH.Framework.IRepository" mapTo="AH.Framework.Repository.BaseRepository`1,AH.Framework.Repository">
          <interceptor type="InterfaceInterceptor"/>
          <interceptionBehavior type="AH.Core.Behaviors.CachingBehavior, AH.Core"/>
          <interceptionBehavior type="AH.Core.Behaviors.ErrorExceptionBehavior, AH.Core"/>
        </register>
        <!--<register type="AH.IService.IBase`1,AH.IService" mapTo="AH.SqlService.Base`1,AH.SqlService">
          <interceptor type="InterfaceInterceptor"/>
          <interceptionBehavior type="AH.Core.Behaviors.CachingBehavior, AH.Core"/>
          <interceptionBehavior type="AH.Core.Behaviors.ErrorExceptionBehavior, AH.Core"/>
        </register>-->
        <register type="AH.ICache.ICacheProvider,AH.ICache" mapTo="AH.CustomCache.CustomCache,AH.CustomCache"/> 
        <register type="AH.Framework.IService.ISys_UserService,AH.Framework.IService" mapTo="AH.Framework.Service.Sys_UserService,AH.Framework.Service"/>

      </container>
    </containers>
  </unity>

</configuration>